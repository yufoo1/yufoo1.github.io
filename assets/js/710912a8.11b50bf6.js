"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=p(n),h=r,b=c["".concat(l,".").concat(h)]||c[h]||d[h]||a;return n?o.createElement(b,i(i({ref:t},s),{},{components:n})):o.createElement(b,i({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[c]="string"==typeof e?e:r,i[1]=u;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},i="Set Up Personal Site and Deploy Through GitHub",u={unversionedId:"web-app-development/Set Up Personal Site and Deploy Through GitHub",id:"web-app-development/Set Up Personal Site and Deploy Through GitHub",title:"Set Up Personal Site and Deploy Through GitHub",description:"My website is built with Docusaurus, used React and TypeScript.",source:"@site/docs/web-app-development/Set Up Personal Site and Deploy Through GitHub.md",sourceDirName:"web-app-development",slug:"/web-app-development/Set Up Personal Site and Deploy Through GitHub",permalink:"/docs/web-app-development/Set Up Personal Site and Deploy Through GitHub",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/web-app-development/Set Up Personal Site and Deploy Through GitHub.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Deploy Your Own Website Database and OSS on the Server",permalink:"/docs/web-app-development/Deploy Your Own Website and Database on the Server"},next:{title:"Configure Flutter Environment in Your PC",permalink:"/docs/web-app-development/Configure Flutter Environment in Your PC"}},l={},p=[{value:"Build Your Site Through Scaffolding",id:"build-your-site-through-scaffolding",level:2},{value:"Deploy Through GitHub",id:"deploy-through-github",level:2},{value:"Add Tutorial",id:"add-tutorial",level:2}],s={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"set-up-personal-site-and-deploy-through-github"},"Set Up Personal Site and Deploy Through GitHub"),(0,r.kt)("p",null,"My website is built with ",(0,r.kt)("inlineCode",{parentName:"p"},"Docusaurus"),", used ",(0,r.kt)("inlineCode",{parentName:"p"},"React")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Docusaurus is Facebook's easy-to-maintain static website creation tool for open source project developers. You can update your website with Markdown simply and build a static website with a home page, documentation, apis, help, and a blog page in just 5 minutes."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs"},"tutorial of Docusaurus"))),(0,r.kt)("h2",{id:"build-your-site-through-scaffolding"},"Build Your Site Through Scaffolding"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-she"},"npx create-docusaurus@latest my-website classic\n")),(0,r.kt)("p",null,"If you want to maintain your own site through ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript"),", you can use"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx create-docusaurus@latest my-website classic --typescript\n")),(0,r.kt)("h2",{id:"deploy-through-github"},"Deploy Through GitHub"),(0,r.kt)("p",null,"If you want to deploy your site through GitHub, you should firstly create a repository named your username.github.io. Since your site isn't built with ",(0,r.kt)("inlineCode",{parentName:"p"},"Jekyll"),", you should write ",(0,r.kt)("inlineCode",{parentName:"p"},"CI/CD")," to implement deployment automatically. Here is the teaplate for ",(0,r.kt)("inlineCode",{parentName:"p"},"CI/CD"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'name: "Deploy"\non:\n  push:\n    branches: ["main"]\n\njobs:\n  github-pages:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build the static site.\n        run: |\n          npm install\n          npm run build\n      - name: Publish the static site to GitHub Pages.\n        uses: jamesives/github-pages-deploy-action@releases/v3\n        with:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          BRANCH: gh-pages\n          FOLDER: build\n')),(0,r.kt)("p",null,"Then configure ",(0,r.kt)("inlineCode",{parentName:"p"},"GitHub Pages"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(8636).Z,width:"1376",height:"954"})),(0,r.kt)("p",null,"Once the ",(0,r.kt)("inlineCode",{parentName:"p"},"CI/CD")," is configured, you just need to push the code of your site to the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch, and ",(0,r.kt)("inlineCode",{parentName:"p"},"GitHub Actions")," will help you build the project and push it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch. Then, you can visit your site by ",(0,r.kt)("inlineCode",{parentName:"p"},"YOUR USERNAME.github.io"),"."),(0,r.kt)("h2",{id:"add-tutorial"},"Add Tutorial"),(0,r.kt)("p",null,"In default configuration, you just need to create a folder in ./docs, write ",(0,r.kt)("inlineCode",{parentName:"p"},"_category_.json")," and insert your ",(0,r.kt)("inlineCode",{parentName:"p"},"Markdown")," file. The formate of ",(0,r.kt)("inlineCode",{parentName:"p"},"_category.json")," is below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "label": "LABEL",\n  "position": POSITION,\n  "link": {\n    "type": "generated-index",\n    "description": "DESCRIPTION"\n  }\n}\n')),(0,r.kt)("p",null,"Go through the steps above, you must have built your site in 5 minutes and deploy it successfully. Next, all you need to do is think about how to decorate your website."))}c.isMDXComponent=!0},8636:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/6-275a9f8ea1be089a6e027f7ee5788f08.jpg"}}]);